{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEgBC,SAASC,cAAc,SAC/BC,iBAAiB,UA0BzB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAAWF,EAAMG,cAEvB,IAAIC,EAAYC,OAAOH,EAAgB,MAAEI,OACzC,MAAMC,EAAWF,OAAOH,EAAe,KAAEI,OACnCE,EAAaH,OAAOH,EAAiB,OAAEI,OAC7CG,QAAQC,IAAIN,EAAWG,EAAUC,GACjC,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAYG,GAAK,EAAG,CACtC,IAAIC,EAAWD,EAAI,EACnBF,QAAQC,IAAIE,GACZ,IAAIC,EAAQT,EAAYG,EAAWI,EACnCF,QAAQC,IAAIG,GACZC,EAAcF,EAAUC,GAAOE,KAAKC,GAAeC,MAAMC,E,KArC7D,MAAMJ,EAAgB,CAACF,EAAUC,IACxB,IAAIM,SAAQ,CAACC,EAASC,IACLC,KAAKC,SAAW,GAG7BH,EAAQ,C,SAAER,E,MAAUC,IAEpBQ,EAAO,C,SAAET,E,MAAUC,MAK1BG,EAAgB,EAACJ,SAAEA,EAAQC,MAAEA,MACjCW,YAAW,KACTC,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBf,QAAiBC,MAAU,GACvEA,EAAM,EAGLK,EAAc,EAACN,SAAEA,EAAQC,MAAEA,MAC/BW,YAAW,KACTC,EAAA9B,GAAS+B,OAAOE,QAAQ,sBAAoBhB,QAAeC,MAAU,GACpEA,EAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', makePromises);\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      return resolve({ position, delay });\n    } else {\n      return reject({ position, delay });\n    }\n  });\n};\n\nconst onMakeSuccess = ({ position, delay }) => {\n  setTimeout(() => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }, delay);\n};\n\nconst onMakeError = ({ position, delay }) => {\n  setTimeout(() => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }, delay);\n};\n\nfunction makePromises(event) {\n  event.preventDefault();\n  const formData = event.currentTarget;\n\n  let delayData = Number(formData['delay'].value);\n  const stepData = Number(formData['step'].value);\n  const amountData = Number(formData['amount'].value);\n  console.log(delayData, stepData, amountData);\n  for (let i = 0; i < amountData; i += 1) {\n    let position = i + 1;\n    console.log(position);\n    let delay = delayData + stepData * i;\n    console.log(delay);\n    createPromise(position, delay).then(onMakeSuccess).catch(onMakeError);\n  }\n}"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","event","preventDefault","formData","currentTarget","delayData","Number","value","stepData","amountData","console","log","i","position","delay","$47d4ff9957288465$var$createPromise","then","$47d4ff9957288465$var$onMakeSuccess","catch","$47d4ff9957288465$var$onMakeError","Promise","resolve","reject","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure"],"version":3,"file":"03-promises.3ce5d8db.js.map"}
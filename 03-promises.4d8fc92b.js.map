{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEgBC,SAASC,cAAc,SAC/BC,iBAAiB,UA0BzB,SAAsBC,GACpBA,EAAMC,iBACN,IAAMC,EAAWF,EAAMG,cAEnBC,EAAYC,OAAOH,EAAgB,MAAEI,OACnCC,EAAWF,OAAOH,EAAe,KAAEI,OACnCE,EAAaH,OAAOH,EAAiB,OAAEI,OAC7CG,QAAQC,IAAIN,EAAWG,EAAUC,GACjC,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAYG,GAAK,EAAG,CACtC,IAAIC,EAAWD,EAAI,EACnBF,QAAQC,IAAIE,GACZ,IAAIC,EAAQT,EAAYG,EAAWI,EACnCF,QAAQC,IAAIG,GACZC,EAAcF,EAAUC,GAAOE,KAAKC,GAAeC,MAAMC,E,KArC7D,IAAMJ,EAAgB,SAACF,EAAUC,GAC/B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAG3B,OAFsBC,KAAKC,SAAW,GAG7BH,EAAQ,CAAER,WAAUC,UAEpBQ,EAAO,CAAET,WAAUC,S,KAK1BG,EAAgB,SAAAQ,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MACjCY,YAAW,WACTC,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,GACrEA,E,EAGCK,EAAc,SAAAM,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MAC/BY,YAAW,WACTC,EAAA/B,GAASgC,OAAOG,QAAQ,sBAAqCD,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,GAClEA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', makePromises);\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      return resolve({ position, delay });\n    } else {\n      return reject({ position, delay });\n    }\n  });\n};\n\nconst onMakeSuccess = ({ position, delay }) => {\n  setTimeout(() => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }, delay);\n};\n\nconst onMakeError = ({ position, delay }) => {\n  setTimeout(() => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }, delay);\n};\n\nfunction makePromises(event) {\n  event.preventDefault();\n  const formData = event.currentTarget;\n\n  let delayData = Number(formData['delay'].value);\n  const stepData = Number(formData['step'].value);\n  const amountData = Number(formData['amount'].value);\n  console.log(delayData, stepData, amountData);\n  for (let i = 0; i < amountData; i += 1) {\n    let position = i + 1;\n    console.log(position);\n    let delay = delayData + stepData * i;\n    console.log(delay);\n    createPromise(position, delay).then(onMakeSuccess).catch(onMakeError);\n  }\n}"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","preventDefault","formData","currentTarget","delayData","Number","value","stepData","amountData","console","log","i","position","delay","$ce04d3a99e08e73b$var$createPromise","then","$ce04d3a99e08e73b$var$onMakeSuccess","catch","$ce04d3a99e08e73b$var$onMakeError","Promise","resolve","reject","Math","random","param","setTimeout","$parcel$interopDefault","Notify","success","concat","failure"],"version":3,"file":"03-promises.4d8fc92b.js.map"}